// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: instrument/v1/instrument.proto

package instrumentv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Instrument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid     string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Symbol  string `protobuf:"bytes,3,opt,name=symbol,proto3" json:"symbol,omitempty"`
	LogoUrl string `protobuf:"bytes,4,opt,name=logo_url,json=logoUrl,proto3" json:"logo_url,omitempty"`
	// Types that are assignable to Pair:
	//
	//	*Instrument_TryPair
	//	*Instrument_UsdtPair
	//	*Instrument_UsdPair
	Pair     isInstrument_Pair `protobuf_oneof:"pair"`
	Labels   []string          `protobuf:"bytes,9,rep,name=labels,proto3" json:"labels,omitempty"`
	Version  int64             `protobuf:"varint,10,opt,name=version,proto3" json:"version,omitempty"`
	Metadata map[string]string `protobuf:"bytes,11,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Instrument) Reset() {
	*x = Instrument{}
	if protoimpl.UnsafeEnabled {
		mi := &file_instrument_v1_instrument_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Instrument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Instrument) ProtoMessage() {}

func (x *Instrument) ProtoReflect() protoreflect.Message {
	mi := &file_instrument_v1_instrument_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Instrument.ProtoReflect.Descriptor instead.
func (*Instrument) Descriptor() ([]byte, []int) {
	return file_instrument_v1_instrument_proto_rawDescGZIP(), []int{0}
}

func (x *Instrument) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *Instrument) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Instrument) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Instrument) GetLogoUrl() string {
	if x != nil {
		return x.LogoUrl
	}
	return ""
}

func (m *Instrument) GetPair() isInstrument_Pair {
	if m != nil {
		return m.Pair
	}
	return nil
}

func (x *Instrument) GetTryPair() *TradingPair {
	if x, ok := x.GetPair().(*Instrument_TryPair); ok {
		return x.TryPair
	}
	return nil
}

func (x *Instrument) GetUsdtPair() *TradingPair {
	if x, ok := x.GetPair().(*Instrument_UsdtPair); ok {
		return x.UsdtPair
	}
	return nil
}

func (x *Instrument) GetUsdPair() *TradingPair {
	if x, ok := x.GetPair().(*Instrument_UsdPair); ok {
		return x.UsdPair
	}
	return nil
}

func (x *Instrument) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Instrument) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Instrument) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type isInstrument_Pair interface {
	isInstrument_Pair()
}

type Instrument_TryPair struct {
	TryPair *TradingPair `protobuf:"bytes,6,opt,name=try_pair,json=tryPair,proto3,oneof"`
}

type Instrument_UsdtPair struct {
	UsdtPair *TradingPair `protobuf:"bytes,7,opt,name=usdt_pair,json=usdtPair,proto3,oneof"`
}

type Instrument_UsdPair struct {
	UsdPair *TradingPair `protobuf:"bytes,8,opt,name=usd_pair,json=usdPair,proto3,oneof"`
}

func (*Instrument_TryPair) isInstrument_Pair() {}

func (*Instrument_UsdtPair) isInstrument_Pair() {}

func (*Instrument_UsdPair) isInstrument_Pair() {}

var File_instrument_v1_instrument_proto protoreflect.FileDescriptor

var file_instrument_v1_instrument_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x2f,
	0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x1a,
	0x20, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x74,
	0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x61, 0x69, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xce, 0x03, 0x0a, 0x0a, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x19,
	0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6c, 0x6f, 0x67, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x37, 0x0a, 0x08, 0x74, 0x72, 0x79,
	0x5f, 0x70, 0x61, 0x69, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x69, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x64,
	0x69, 0x6e, 0x67, 0x50, 0x61, 0x69, 0x72, 0x48, 0x00, 0x52, 0x07, 0x74, 0x72, 0x79, 0x50, 0x61,
	0x69, 0x72, 0x12, 0x39, 0x0a, 0x09, 0x75, 0x73, 0x64, 0x74, 0x5f, 0x70, 0x61, 0x69, 0x72, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x69,
	0x72, 0x48, 0x00, 0x52, 0x08, 0x75, 0x73, 0x64, 0x74, 0x50, 0x61, 0x69, 0x72, 0x12, 0x37, 0x0a,
	0x08, 0x75, 0x73, 0x64, 0x5f, 0x70, 0x61, 0x69, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x69, 0x72, 0x48, 0x00, 0x52, 0x07, 0x75,
	0x73, 0x64, 0x50, 0x61, 0x69, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x43, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x69, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x3b, 0x0a,
	0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x70, 0x61,
	0x69, 0x72, 0x42, 0xaf, 0x01, 0x0a, 0x2b, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x64,
	0x65, 0x6d, 0x6f, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x42, 0x0f, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x1a, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x2f, 0x76, 0x31, 0x3b, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x76,
	0x31, 0xa2, 0x02, 0x03, 0x49, 0x58, 0x58, 0xaa, 0x02, 0x0d, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0d, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x19, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0xea, 0x02, 0x0e, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_instrument_v1_instrument_proto_rawDescOnce sync.Once
	file_instrument_v1_instrument_proto_rawDescData = file_instrument_v1_instrument_proto_rawDesc
)

func file_instrument_v1_instrument_proto_rawDescGZIP() []byte {
	file_instrument_v1_instrument_proto_rawDescOnce.Do(func() {
		file_instrument_v1_instrument_proto_rawDescData = protoimpl.X.CompressGZIP(file_instrument_v1_instrument_proto_rawDescData)
	})
	return file_instrument_v1_instrument_proto_rawDescData
}

var file_instrument_v1_instrument_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_instrument_v1_instrument_proto_goTypes = []any{
	(*Instrument)(nil),  // 0: instrument.v1.Instrument
	nil,                 // 1: instrument.v1.Instrument.MetadataEntry
	(*TradingPair)(nil), // 2: instrument.v1.TradingPair
}
var file_instrument_v1_instrument_proto_depIdxs = []int32{
	2, // 0: instrument.v1.Instrument.try_pair:type_name -> instrument.v1.TradingPair
	2, // 1: instrument.v1.Instrument.usdt_pair:type_name -> instrument.v1.TradingPair
	2, // 2: instrument.v1.Instrument.usd_pair:type_name -> instrument.v1.TradingPair
	1, // 3: instrument.v1.Instrument.metadata:type_name -> instrument.v1.Instrument.MetadataEntry
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_instrument_v1_instrument_proto_init() }
func file_instrument_v1_instrument_proto_init() {
	if File_instrument_v1_instrument_proto != nil {
		return
	}
	file_instrument_v1_trading_pair_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_instrument_v1_instrument_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Instrument); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_instrument_v1_instrument_proto_msgTypes[0].OneofWrappers = []any{
		(*Instrument_TryPair)(nil),
		(*Instrument_UsdtPair)(nil),
		(*Instrument_UsdPair)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_instrument_v1_instrument_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_instrument_v1_instrument_proto_goTypes,
		DependencyIndexes: file_instrument_v1_instrument_proto_depIdxs,
		MessageInfos:      file_instrument_v1_instrument_proto_msgTypes,
	}.Build()
	File_instrument_v1_instrument_proto = out.File
	file_instrument_v1_instrument_proto_rawDesc = nil
	file_instrument_v1_instrument_proto_goTypes = nil
	file_instrument_v1_instrument_proto_depIdxs = nil
}
